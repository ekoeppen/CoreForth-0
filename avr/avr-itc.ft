\ vim:ft=forth:ts=2:sw=2:expandtab

\ ## Indirect Threaded Forth
\
\ ### Register usage
\ 
\ temp: r16, r17
\ W: r24, r25
\ IP: X
\ SP: SP
\ RP: Y
\ 
\ ### DOCOL / Enter
\ IP points to next word in the caller
\ W points to CFA

\ -- Host ---------------------------------------------------------------------

::host::

cr

variable 'reset
variable 'next
variable 'docol
variable 'docon
variable 'exit
variable 'start

:noname     th, ; is t,call
:noname     'docon @ th, ; is t,docon
:noname     'docol @ th, ; is t,enter
:noname     s" exit" tfwdref ; is t,exit
:noname     $940c th, 'next @ 2/ th, ; is t,next
:noname     s" lit" tfwdref ; is t,lit
:noname     s" branch" tfwdref ; is t,branch
:noname     s" ?branch" tfwdref ; is t,?branch
:noname     talign
            there tlast @ t, tlast !
            $0080 th,
            there >target pack$ c@ 1+ tallot talign ; is thead
:noname     tlast @ tcell + dup t@ $40 or swap t! ; is timmediate
:noname     tcell + tcell + dup tc@ + taligned ; is tlink>
:noname     s" (does>)" tfind th, ; is t,dodoes
:noname     there 2 + th, ; is t,docode

$00000000 to trom
$00008000 to tram
        2 to tcell

trom tdp !
tram tvp !

$100 torg

\ -- Target -------------------------------------------------------------------

::target::

there 'start !
$0000 th,

there 'next !
$01fd th, $9185 th, $9195 th, $9612 th, $01fc th, $9105 th, $9115 th, $01f8 th,
$95f6 th, $95e7 th, $9409 th, 

there 'reset !
$e008 th, $bf0e th, $ef0f th, $bf0d th, $ebcf th, $e0d8 th,
$a0 'start @ $0f and or tc, $e0 'start @ $f0 and 4 rshift or tc,
$b0 'start @ 8 rshift $0f and or tc, $e0 'start @ $f0 and #12 rshift or tc,
$c000 'next @ there - 2/ 1- $fff and or th,

there 'docol !
$93ba th, $93aa th, $01dc th, $9612 th,
$c000 'next @ there - 2/ 1- $fff and or th,

there 'docon !
$01fc th, $9632 th, $9105 th, $9115 th, $931f th, $930f th,
$c000 'next @ there - 2/ 1- $fff and or th,

code exit $91a9 $91b9 end-code
code branch $01fd $91a5 $91b5 end-code
code ?branch $910f $911f $2b01 $f421 $01fd $91a5 $91b5 $c001 $9612 end-code
code halt $cfff end-code
code lit $01fd $9105 $9115 $931f $930f $9612 end-code
code @ $91ef $91ff $9101 $9111 $930f $931f end-code
code ! $91ef $91ff $910f $911f $9301 $9311 end-code
code c@ $91ef $91ff $9101 $e010 $930f $931f end-code
code c! $91ef $91ff $910f $911f $e010 $9301 $9311 end-code
code emit $910f $911f $9110 $00c0 $9300 $00c6 end-code
code bye $9588 end-code

: nop ;
: quit 0 if $40 emit $40 emit $0d emit $0a emit then
  bye ;

::host::

." next " 'next @ . cr
." reset " 'reset @ . cr
." docol " 'docol @ . cr

'reset @ 2/ 1- $c000 + #target w!
t' quit 'start @ >target w! 

: save-bin          s" avr.bin" w/o create-file throw >r
                    #target there r@ write-file throw
                    r> close-file throw ;
variable hex-fd

s" avr.hex" w/o create-file throw hex-fd !
trom #target there trom - hex-fd @ type-hex
hex-fd @ close-file throw

save-bin

