\ vim:ft=forth:ts=2:sw=2:expandtab:foldmethod=marker:foldmarker=\\\ --\ ,\\\ ---:

\ -----------------------------------------------------------------------------
\ -- Machine interface

code halt       $E7FE $46F7 end-code
code bye        $2118 $B402 $BEAB $46F7 end-code
code wfi        $BF30 $46F7 end-code
code wfe        $BF20 $46F7 end-code
code eint       $B662 $46F7 end-code
code dint       $B672 $46F7 end-code

\ Compiler and control flow

\ code lit        $4674 $3C01 $F846 $0D04 $6820 $3405 $46A7 end-code
\ code lit        $4674 $3C01 $8821 $3402 $8822 $0412 $4311 $3403 $3E04 $6030
\                 $0008 $46A7 end-code
code lit        $4674 $3E04 $6030 $3C01 $6820 $3405 $46A7 end-code
code >branch    $1040 $4906 $0002 $12D2 $4B05 $401A $4311 $0002 $0412 $4B04
                $401A $4311 $0008 $46F7 $F400 $F800 $03FF $0000 $0000 $7FFF
                $46F7 end-code
code exit       $BD00 end-code
code branch     $4672 $3A01 $6811 $468F end-code
code ?branch    $0001 $6830 $3604 $2900 $D002 $4671 $3104 $468F $4672 $3A01
                $6811 $468F end-code
\ code branch     $4672 $3A01 $6811 $468F end-code
\ code ?branch    $0001 $ce01 $D002 $4671 $3104 $468F $4672 $3A01
\                 $6811 $468F end-code


\ -----------------------------------------------------------------------------
\ -- Stack operations

code dup        $3E04 $6030 $46F7 end-code
code drop       $6830 $3604 $46F7 end-code
code swap       $6831 $6030 $0008 $46F7 end-code
code over       $3E04 $6030 $6870 $46F7 end-code
code rot        $6873 $6832 $0001 $6072 $6031 $0018 $46F7 end-code
code ?dup       $2800 $D001 $3E04 $6030 $46F7 end-code
code nip        $3604 $46F7 end-code
code tuck       $6831 $6030 $3E04 $6031 $46F7 end-code
code 2dup       $6831 $3E08 $6070 $6031 $46F7 end-code
code 2swap      $68B3 $6872 $6831 $60B1 $6070 $6033 $0010 $46F7 end-code

code >r         $0001 $6830 $3604 $B402 $46F7 end-code
code r>         $BC02 $3E04 $6030 $0008 $46F7 end-code
code r@         $9900 $3E04 $6030 $0008 $46F7 end-code
code rdrop      $BC10 $46F7 end-code

code sp@        $4631 $3E04 $6030 $0008 $46F7 $46F7 end-code
code rp@        $4669 $3E04 $6030 $0008 $46F7 $46F7 end-code
code sp!        $4606 $4631 $3904 $6808 $46F7 $46F7 end-code
code rp!        $0001 $6830 $3604 $468D $46F7 $46F7 end-code

\ -----------------------------------------------------------------------------
\ -- Memory operations

code c@         $7800 $46F7 end-code
code c!         $6831 $7001 $6870 $3608 $46F7 end-code
code h@         $8800 $46F7 end-code
code h!         $6831 $8001 $6870 $3608 $46F7 end-code
code @          $6800 $46F7 end-code
code !          $6831 $6001 $6870 $3608 $46F7 end-code

\ -----------------------------------------------------------------------------
\ -- Logical operators

code and        $6831 $3604 $4008 $46F7 end-code
code or         $6831 $3604 $4308 $46F7 end-code
code invert     $43C0 $46F7 end-code
code not        $43C0 $46F7 end-code
code xor        $6831 $3604 $4048 $46F7 end-code
code aligned    $3003 $2103 $43C9 $4008 $46F7 end-code

code bis!       $6831 $6802 $4311 $6001 $6870 $3608 $46F7 end-code
code bic!       $6831 $6802 $438A $6002 $6870 $3608 $46F7 end-code
code xor!       $6831 $6802 $404A $6002 $6870 $3608 $46F7 end-code
code bis        $6831 $3604 $4308 $46F7 end-code
code bic        $6831 $4381 $4608 $3604 $46F7 end-code
code bit@       $6831 $3604 $6802 $2000 $4011 $D000 $43C0 $46F7 end-code

\ -----------------------------------------------------------------------------
\ -- Arithmetic

code +          $6831 $3604 $1840 $46F7 end-code
code -          $6831 $3604 $1A08 $46F7 end-code
code *          $6831 $3604 $4348 $46F7 end-code
code u/mod      $CE02 $FBB1 $F3F0 $FB00 $1213 $F846 $2D04 $0018 $46F7 end-code
code /mod       $CE02 $FB91 $F3F0 $FB00 $1213 $F846 $2D04 $0018 $46F7 end-code
code abs        $2800 $DA01 $43C0 $3001 $46F7 end-code

code 1+         $3001 $46F7 end-code
code 2+         $3002 $46F7 end-code
code 4+         $3004 $46F7 end-code
code 1-         $3801 $46F7 end-code
code 2-         $3802 $46F7 end-code
code 4-         $3804 $46F7 end-code
code char+      $3001 $46F7 end-code
code cell+      $3004 $46F7 end-code
code char-      $3801 $46F7 end-code
code cell-      $3804 $46F7 end-code
code 2/         $1040 $46F7 end-code
code 2*         $1800 $46F7 end-code

code lshift     $6831 $3604 $4081 $0008 $46F7 end-code
code rshift     $0000 $6831 $3604 $40C1 $0008 $46F7 end-code
code shl        $0040 $46F7 end-code
code shr        $0840 $46F7 end-code

code 0=         $2300 $2800 $D100 $43DB $0018 $46F7 end-code
code 0<>        $2300 $2800 $D000 $43DB $0018 $46F7 end-code
code 0<         $2300 $2800 $DA00 $43DB $0018 $46F7 end-code
code 0<=        $2300 $2800 $DC00 $43DB $0018 $46F7 end-code
code 0>         $2300 $2800 $DD00 $43DB $0018 $46F7 end-code
code 0>=        $2300 $2800 $DB00 $43DB $0018 $46F7 end-code
code =          $6831 $3604 $2300 $4288 $D100 $43DB $0018 $46F7 end-code
code <          $6831 $3604 $2300 $4281 $DA00 $43DB $0018 $46F7 end-code
code u<         $6831 $3604 $2300 $4281 $D200 $43DB $0018 $46F7 end-code

code false      $f846 $0d04 $2000 $46f7 end-code
code true       $f846 $0d04 $2000 $43c0 $46f7 end-code

code cell       $f846 $0d04 $2004 $46F7 end-code
code cells      $1800 $1800 $46F7 end-code
code chars      $46F7 end-code
code /cell      $1040 $1040 $46F7 end-code

code m+         $6831 $2200 $1809 $4152 $0010 $6031 $46F7 end-code
code d+         $CE0E $1810 $4159 $3E04 $6031 $46F7 end-code
code um*        $6831 $b28a $0c03 $0c09 $460c $4359 $b280 $4353 $4344
                $4350 $2200 $191b $4152 $0412 $1889 $041a $0c1b $1880
                $4159 $6030 $0008 $46F7 end-code

: dnegate       not >r not 1 m+ r> + ;
: m*            2dup xor 0< >r abs swap abs um* r> if dnegate then ;
: sm/rem        nip /mod ;
: um/mod        nip u/mod ;

: fm/mod        dup >r 2dup xor 0< >r sm/rem over 0<> r> and if
                  1 - swap r> + swap exit
                then r> drop ;
: */mod         >r m* r> sm/rem ;
: */            */mod swap drop ;

: execute       1+ >r ;
